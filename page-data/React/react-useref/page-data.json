{"componentChunkName":"component---src-templates-blog-post-js","path":"/React/react-useref/","result":{"data":{"site":{"siteMetadata":{"title":"Won Tech Blog","author":"[dowonkim97]","siteUrl":"https://dowonkim97.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"ca4937e8-ab32-5461-87a5-fd07a14b6eb7","excerpt":"UseRef란 공식문서에서 는 “a React Hook that reference a value that’s not needed for rendering” “렌더링에 필요하지 않은 값 참조할 수 있게 해주는 리액트 훅”이라고 정의되어 있습니다. 는 항상 의 값을 리턴하고, 안에는  프로퍼티에 저장합니다. 저장하는 값은 모두 이곳에 담깁니다. 초기값인 를 넣을 수 있고, 첫 렌더링에만 값이 적용되며, 다음 렌더링에는 값이 적용되지 않습니다. DOM…","html":"<h3 id=\"useref란\" style=\"position:relative;\"><a href=\"#useref%EB%9E%80\" aria-label=\"useref란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UseRef란</h3>\n<hr>\n<p>공식문서에서 <code class=\"language-text\">useRef</code>는 “a React Hook that reference a value that’s not needed for rendering”</p>\n<p><strong>“렌더링에 필요하지 않은 값 참조할 수 있게 해주는 리액트 훅”</strong>이라고 정의되어 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span>initialValue<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { current: initalValue }</span></code></pre></div>\n<p><code class=\"language-text\">useRef</code>는 항상 <code class=\"language-text\">{object}</code>의 값을 리턴하고, 안에는 <code class=\"language-text\">.current</code> 프로퍼티에 저장합니다. 저장하는 값은 모두 이곳에 담깁니다.</p>\n<p>초기값인 <code class=\"language-text\">initialValue</code>를 넣을 수 있고, 첫 렌더링에만 값이 적용되며, 다음 렌더링에는 값이 적용되지 않습니다.</p>\n<h3 id=\"dom-노드-저장-및-내장-메소드를-사용할-수-있다\" style=\"position:relative;\"><a href=\"#dom-%EB%85%B8%EB%93%9C-%EC%A0%80%EC%9E%A5-%EB%B0%8F-%EB%82%B4%EC%9E%A5-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4\" aria-label=\"dom 노드 저장 및 내장 메소드를 사용할 수 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 노드 저장 및 내장 메소드를 사용할 수 있다.</h3>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> nodeRef <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">View</span></span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>nodeRef<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<h3 id=\"typescript에서-useref란\" style=\"position:relative;\"><a href=\"#typescript%EC%97%90%EC%84%9C-useref%EB%9E%80\" aria-label=\"typescript에서 useref란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript에서 useRef란?</h3>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">RefObject<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">readonly</span> current<span class=\"token operator\">:</span> <span class=\"token constant\">T</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MutableRefObject<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n  current<span class=\"token operator\">:</span> <span class=\"token constant\">T</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>RefObject의 정의를 보면 초기값을 <code class=\"language-text\">.current</code>에 저장합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> localVarRef <span class=\"token operator\">=</span> useRef <span class=\"token operator\">&lt;</span> number <span class=\"token operator\">></span> <span class=\"token number\">0</span></code></pre></div>\n<p>로컬 변수 용도로 사용할 경우 <code class=\"language-text\">MutableRefObject&lt;T></code> 제네릭 타입과 같은 타입의 초깃값을 넣어줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> inputRef <span class=\"token operator\">=</span> useRef <span class=\"token operator\">&lt;</span> HTMLInputElement <span class=\"token operator\">></span> <span class=\"token keyword\">null</span></code></pre></div>\n<p>DOM을 직접 조작하기 위해 사용할 경우 <code class=\"language-text\">RefObject&lt;T></code> 초깃값으로 <code class=\"language-text\">null</code>을 넣어줍니다.</p>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<p><a href=\"https://react.dev/reference/react/useRef\">https://react.dev/reference/react/useRef</a></p>\n<p><a href=\"https://driip.me/7126d5d5-1937-44a8-98ed-f9065a7c35b5\">https://driip.me/7126d5d5-1937-44a8-98ed-f9065a7c35b5</a></p>\n<hr>","frontmatter":{"title":"React에서 UseRef란?","date":"2023-11-15"}}},"pageContext":{"slug":"/React/react-useref/","previous":null,"next":{"fields":{"slug":"/Nest/nest-birth/"},"frontmatter":{"title":"NodeJS에서 Nest란 무엇이고, 왜 탄생하게 되었을까?"}}}},"staticQueryHashes":["2486386679","3128451518"]}